from nacl import utils, secret
from mim import generateQK

# Generate Alice and Bob keys
# The symmetric key for both of them are produced by the quantum circuit
qkeyarray = generateQK(256)

alice_key = qkeyarray.get('A')
bob_key = qkeyarray.get('B')
print(alice_key)
print(bob_key)

qkey=int(alice_key, 2).to_bytes((len(alice_key)+7) // 8, byteorder='little')
qkeyb=int(bob_key, 2).to_bytes((len(bob_key)+7) // 8, byteorder='little')
print('Alice key: '+str(qkey))
print('Bob key:   '+str(qkeyb))

# Secret Box (Salsa20withPoly1305 algorithm)
# In this step both Alice and Bob should have simultaneously the symmetric key
box = secret.SecretBox(qkey)
boxb = secret.SecretBox(qkeyb)

# Maybe the nonce can also be generated by a quantum circuit (Team11)
nonce = utils.random(secret.SecretBox.NONCE_SIZE)
print(nonce)

# Message to be encrypted and decrypted
message = b"CryptoQ"
print(message)

# Alice would encrypt her message
encrypted = box.encrypt(message, nonce)
print(encrypted)

ctext = encrypted.ciphertext
print(ctext)

# Bob would decrypt Alice's message
plain = boxb.decrypt(ctext, nonce)
print(plain)


